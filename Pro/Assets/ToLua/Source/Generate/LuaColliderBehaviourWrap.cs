//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaColliderBehaviourWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LuaColliderBehaviour), typeof(LuaMonoBehaviour));
		L.RegFunction("SetLuaObject", SetLuaObject);
		L.RegFunction("OnCollisionEnter", OnCollisionEnter);
		L.RegFunction("OnCollisionExit", OnCollisionExit);
		L.RegFunction("OnCollisionStay", OnCollisionStay);
		L.RegFunction("OnTriggerEnter", OnTriggerEnter);
		L.RegFunction("OnTriggerExit", OnTriggerExit);
		L.RegFunction("OnTriggerStay", OnTriggerStay);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetLuaObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaColliderBehaviour obj = (LuaColliderBehaviour)ToLua.CheckObject(L, 1, typeof(LuaColliderBehaviour));
			LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
			obj.SetLuaObject(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnCollisionEnter(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaColliderBehaviour obj = (LuaColliderBehaviour)ToLua.CheckObject(L, 1, typeof(LuaColliderBehaviour));
			UnityEngine.Collision arg0 = (UnityEngine.Collision)ToLua.CheckObject(L, 2, typeof(UnityEngine.Collision));
			obj.OnCollisionEnter(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnCollisionExit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaColliderBehaviour obj = (LuaColliderBehaviour)ToLua.CheckObject(L, 1, typeof(LuaColliderBehaviour));
			UnityEngine.Collision arg0 = (UnityEngine.Collision)ToLua.CheckObject(L, 2, typeof(UnityEngine.Collision));
			obj.OnCollisionExit(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnCollisionStay(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaColliderBehaviour obj = (LuaColliderBehaviour)ToLua.CheckObject(L, 1, typeof(LuaColliderBehaviour));
			UnityEngine.Collision arg0 = (UnityEngine.Collision)ToLua.CheckObject(L, 2, typeof(UnityEngine.Collision));
			obj.OnCollisionStay(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnTriggerEnter(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaColliderBehaviour obj = (LuaColliderBehaviour)ToLua.CheckObject(L, 1, typeof(LuaColliderBehaviour));
			UnityEngine.Collider arg0 = (UnityEngine.Collider)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Collider));
			obj.OnTriggerEnter(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnTriggerExit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaColliderBehaviour obj = (LuaColliderBehaviour)ToLua.CheckObject(L, 1, typeof(LuaColliderBehaviour));
			UnityEngine.Collider arg0 = (UnityEngine.Collider)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Collider));
			obj.OnTriggerExit(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnTriggerStay(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaColliderBehaviour obj = (LuaColliderBehaviour)ToLua.CheckObject(L, 1, typeof(LuaColliderBehaviour));
			UnityEngine.Collider arg0 = (UnityEngine.Collider)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Collider));
			obj.OnTriggerStay(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

